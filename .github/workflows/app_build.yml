name: App-Build

on:
  push:
    branches: [ main ]
    paths: 
        - "src/**"
        - ".github/workflows/app_build.yml"
  pull_request:
    branches: [ main ]
    paths: 
        - "src/**"
        - ".github/workflows/app_build.yml"

defaults:
  run:
    working-directory: "src/Octo-FireFly.App/"

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout 
      uses: actions/checkout@main

    - name: Install Dotnet 
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: '5.0'

    - name: Generate APP_VERSION
      run: echo "APP_VERSION=$(date +'%y.%m.%d')-${{ github.run_number }}" >> $GITHUB_ENV

    - name: Build Updater
      run: |
        cd ${{ github.workspace }}/src/Octo-FireFly.Updater
        dotnet restore
        dotnet publish -c Release -o '${{ github.workspace }}/App' 

    - name: Build Server
      run: |
        cd ${{ github.workspace }}/src/Octo-FireFly.Server
        dotnet restore
        dotnet publish -c Release -o '${{ github.workspace }}/App' 

    - name: Create Zip
      run: |
        cd ${{ github.workspace }}/App
        zip -r "${{ github.workspace }}/octo-firefly-app-${{ env.APP_VERSION }}.zip" .

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ env.APP_VERSION }}
        release_name: Release ${{ env.APP_VERSION }}
        draft: false
        prerelease: false

    - name: Upload Release Asset
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ${{ github.workspace }}/octo-firefly-app-${{ env.APP_VERSION }}.zip
        asset_name: octo-firefly-app-${{ env.APP_VERSION }}.zip
        asset_content_type: application/zip